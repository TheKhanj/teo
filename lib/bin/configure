#!/usr/bin/env bash

usage() {
	echo 'Configure:'
	echo '	teo configure -c {config.json}'
	echo '	teo configure -h'
}

parsed="$(getopt -o 'hc:' --long 'config:' -- "$@")"

[ "$?" -ne 0 ] && {
	echo 'error parsing options' >&2
	usage
	exit 1
}

eval set -- "$parsed"

while true; do
	case "$1" in
	-h)
		usage
		exit 0
		shift
		;;
	-c | --config)
		config="$2"
		shift 2
		;;
	--)
		shift
		break
		;;
	*)
		echo "unexpected option: $1" >&2
		usage
		exit 1
		;;
	esac
done

[ -z "$config" ] && {
	echo "error: -c or --config is required" >&2
	exit 1
}

[ -f "$config" ] || {
	echo "error: file $config does not exist" >&2
	exit 1
}

[ "$#" -ne 0 ] && {
	echo "error: invalid argument $1" >&2
	exit 1
}

add_record_service() {
	local rdir="$1"
	local cam="$2"
	local url="$3"
	local user="$4"
	local group="$5"

	local service_name="teo-record-$cam.service"

	cat >/usr/lib/systemd/system/$service_name <<-EOF
		[Unit]
		Description=Teo Record Camera($cam)
		After=network.target
		Wants=network.target
		PartOf=teo.target

		[Service]
		Type=simple
		ExecStart=/usr/bin/teo record -c '$cam' -u '$url' -d '$rdir'
		Restart=always
		RestartSec=2s
		StartLimitIntervalSec=0
		StartLimitBurst=0
		User=$user
		Group=$group

		[Install]
		WantedBy=teo.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed installing $service_name" >&2
		return 1
	fi

	echo "installed $service_name" >&2
}

install_teo_target() {
	local target_name="teo.target"

	cat >/usr/lib/systemd/system/$target_name <<-EOF
		[Unit]
		Description=Teo
		Wants=${@}

		[Install]
		WantedBy=multi-user.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed installing $target_name" >&2
		return 1
	fi

	echo "installed $target_name" >&2
}

install_api_service() {
	local config="$1"

	[ "$(cat "$config" | jq ".api" -r)" = "false" ] && return 0

	local user="$(cat "$config" | jq '.api.user // "root"' -r)"
	local group="$(cat "$config" | jq '.api.group // "root"' -r)"

	local service_name="teo-api.service"

	cat >/usr/lib/systemd/system/$service_name <<-EOF
		[Unit]
		Description=Teo Http Api Daemon
		After=network.target
		Wants=network.target
		PartOf=teo.target

		[Service]
		Type=simple
		ExecStart=/usr/bin/teo api -config '$config'
		Restart=always
		RestartSec=2s
		StartLimitIntervalSec=0
		StartLimitBurst=0
		User=$user
		Group=$group

		[Install]
		WantedBy=teo.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed installing $service_name" >&2
		return 1
	fi

	echo "installed $service_name" >&2

	echo "$service_name"
}

install_record_services() {
	local config="$1"

	[ "$(cat "$config" | jq -r ".record")" = "false" ] && return 0

	local user="$(cat "$config" | jq '.record.user // "root"' -r)"
	local group="$(cat "$config" | jq '.record.group // "root"' -r)"

	local record_services=()

	local record_dir="$(cat "$config" | jq -r '.record.dir')"
	[ -d "$record_dir" ] || {
		echo "directory $record_dir does not exist" >&2
		return 1
	}

	while read -r cam; do
		local cc="$(cat "$config" | jq ".cameras.${cam}" -c)"
		local url="$(echo "$cc" | jq -r '.primary')"

		add_record_service "$record_dir" "$cam" "$url" "$user" "$group"

		if [ "$?" -ne 0 ]; then
			return 1
		fi

		record_services+=("teo-record-$cam.service")
	done < <(cat "$config" | jq -r '.cameras | keys | .[]')

	echo "installed recording services" >&2
	echo "${record_services[@]}"
}

install_web_service() {
	local config="$1"

	[ "$(cat "$config" | jq ".web" -r)" = "false" ] && return 0

	local user="$(cat "$config" | jq '.web.user // "root"' -r)"
	local group="$(cat "$config" | jq '.web.group // "root"' -r)"
	local port="$(cat "$config" | jq '.web.port // 8080' -r)"

	local service_name="teo-web.service"

	cat >/usr/lib/systemd/system/$service_name <<-EOF
		[Unit]
		Description=Teo Web Server
		After=network.target
		Wants=network.target
		PartOf=teo.target

		[Service]
		Type=simple
		ExecStart=/usr/bin/teo web -p $port
		Restart=always
		RestartSec=2s
		StartLimitIntervalSec=0
		StartLimitBurst=0
		User=$user
		Group=$group

		[Install]
		WantedBy=teo.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed installing $service_name" >&2
		return 1
	fi

	echo "installed $service_name" >&2

	echo "$service_name"
}

main() {
	local new_config="/etc/teo/config.json"
	mkdir -p "$(dirname "$new_config")" &&
		cp "$config" "$new_config" ||
		return 1
	config="$new_config"

	local services=()

	local record_services
	record_services=$(install_record_services "$config")
	[ "$?" -ne 0 ] && return 1
	services+=($record_services)

	local api_service
	api_service=$(install_api_service "$config")
	[ "$?" -ne 0 ] && return 1
	services+=($api_service)

	local web_service
	web_service=$(install_web_service "$config")
	[ "$?" -ne 0 ] && return 1
	services+=($web_service)

	install_teo_target ${services[@]} || return 1

	systemctl daemon-reload
}

main
