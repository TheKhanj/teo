#!/usr/bin/env bash

usage() {
	echo 'Configure:'
	echo '	teo configure -c {config.json}'
	echo '	teo configure -h'
}

parsed="$(getopt -o 'hc:' --long 'config:' -- "$@")"

[ "$?" -ne 0 ] && {
	echo 'error parsing options' >&2
	usage
	exit 1
}

eval set -- "$parsed"

while true; do
	case "$1" in
	-h)
		usage
		exit 0
		shift
		;;
	-c | --config)
		config="$2"
		shift 2
		;;
	--)
		shift
		break
		;;
	*)
		echo "unexpected option: $1" >&2
		usage
		exit 1
		;;
	esac
done

[ -z "$config" ] && {
	echo "error: -c or --config is required" >&2
	exit 1
}

[ -f "$config" ] || {
	echo "error: file $config does not exist" >&2
	exit 1
}

[ "$#" -ne 0 ] && {
	echo "error: invalid argument $1" >&2
	exit 1
}

get_extra() {
	local user="$1"
	local group="$2"

	local extra=()

	if [ -n "$user" ]; then
		extra+=("User=$user")
	fi
	if [ -n "$group" ]; then
		extra+=("Group=$group")
	fi

	printf "%s\n" "${extra[@]}"
}

add_record_service() {
	local rdir="$1"
	local cam="$2"
	local url="$3"
	local extra="$4"

	cat >/usr/lib/systemd/system/teo-record-$cam.service <<-EOF
		[Unit]
		Description=Teo Record Camera($cam)
		After=network.target
		Wants=network.target
		PartOf=teo.target

		[Service]
		Type=simple
		ExecStart=/usr/bin/teo record -c '$cam' -u '$url' -d '$rdir'
		Restart=always
		RestartSec=2s
		StartLimitIntervalSec=0
		StartLimitBurst=0
		$extra

		[Install]
		WantedBy=teo.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed creating recording service for camera $cam" >&2
		return 1
	fi
}

install_teo_target() {
	cat >/usr/lib/systemd/system/teo.target <<-EOF
		[Unit]
		Description=Teo
		Wants=${@}

		[Install]
		WantedBy=multi-user.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed creating teo.target systemd file" >&2
		return 1
	fi

	echo 'installed /usr/lib/systemd/system/teo.target' >&2
}

install_api_service() {
	local config="$1"
	local extra="$2"

	cat >/usr/lib/systemd/system/teo-api.service <<-EOF
		[Unit]
		Description=Teo Http Api Daemon
		After=network.target
		Wants=network.target
		PartOf=teo.target

		[Service]
		Type=simple
		ExecStart=/usr/bin/teo api -config '$config'
		Restart=always
		RestartSec=2s
		StartLimitIntervalSec=0
		StartLimitBurst=0
		$extra

		[Install]
		WantedBy=teo.target
	EOF

	if [ "$?" -ne 0 ]; then
		echo "failed creating teo-api.service systemd file" >&2
		return 1
	fi

	echo 'installed /usr/lib/systemd/system/teo-daemon.service' >&2
}

main() {
	local record_dir="$(cat "$config" | jq -r '.record.dir')"

	local user="$(cat "$config" | jq -r '.user // empty')"
	local group="$(cat "$config" | jq -r '.group // empty')"
	local extra="$(get_extra "$user" "$group")"

	local record_services=()

	while read -r cam; do
		local cc="$(cat "$config" | jq ".cameras.${cam}" -c)"
		local url="$(echo "$cc" | jq -r '.primary')"

		add_record_service "$record_dir" "$cam" "$url" "$extra"

		if [ "$?" -ne 0 ]; then
			return 1
		fi

		record_services+=("teo-record-$cam.service")
	done < <(cat "$config" | jq -r '.cameras | keys | .[]')

	install_api_service "$config" "$extra" || return 1
	install_teo_target "${record_services[@]}" || return 1
	systemctl daemon-reload
}

main
